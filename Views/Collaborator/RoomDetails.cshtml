@model JcoolDevRoom.Models.Room

<style>
    :root {
        --primary-color: #007bff;
        --secondary-color: #6c757d;
        --success-color: #28a745;
        --background-color: #f8f9fa;
        --white: #ffffff;
        --text-color: #333;
    }

    body {
        font-family: 'Roboto', sans-serif;
        color: var(--text-color);
        background-color: var(--background-color);
    }

    .room-header {
        background-color: var(--primary-color);
        color: var(--white);
        padding: 30px 0;
        margin-bottom: 30px;
    }

    .room-title-container {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

    .room-title {
        font-size: 2.2rem;
        font-weight: bold;
        margin-right: 10px;
        margin-bottom: 0;
    }

    .room-price {
        font-size: 1.5rem;
        color: var(--success-color);
        font-weight: bold;
    }

    .main-image-container {
        position: relative;
        overflow: hidden;
        border-radius: 10px;
    }

    .main-image {
        width: 100%;
        height: 400px;
        object-fit: cover;
        cursor: pointer;
        transition: transform 0.3s ease;
    }

        .main-image:hover {
            transform: scale(1.05);
        }

    .gallery-container {
        display: flex;
        overflow-x: auto;
        gap: 15px;
        padding: 15px 0;
        scrollbar-width: thin;
        scrollbar-color: var(--primary-color) var(--background-color);
    }

        .gallery-container::-webkit-scrollbar {
            height: 6px;
        }

        .gallery-container::-webkit-scrollbar-track {
            background: var(--background-color);
        }

        .gallery-container::-webkit-scrollbar-thumb {
            background-color: var(--primary-color);
            border-radius: 20px;
        }

    .gallery-image {
        width: 120px;
        height: 120px;
        object-fit: cover;
        border-radius: 5px;
        cursor: pointer;
        transition: transform 0.3s, border 0.3s;
        flex-shrink: 0;
    }

        .gallery-image:hover, .gallery-image.active {
            transform: scale(1.05);
            border: 3px solid var(--primary-color);
            box-shadow: 0 0 10px var(--primary-color);
        }

    .info-card {
        background-color: var(--white);
        border-radius: 10px;
        box-shadow: 0 0 20px rgba(0,0,0,0.1);
        padding: 20px;
        margin-bottom: 20px;
    }

    .room-feature {
        margin-bottom: 10px;
    }

    .feature-icon {
        font-size: 1.1rem;
        color: var(--primary-color);
        margin-right: 10px;
    }

    .badge-custom {
        font-size: 0.9rem;
        padding: 0.5em 1em;
        margin-right: 0.5em;
    }

    .contact-btn {
        display: block;
        width: 100%;
        padding: 10px;
        margin-top: 10px;
        text-align: center;
        background-color: var(--primary-color);
        color: var(--white);
        border-radius: 5px;
        text-decoration: none;
        transition: background-color 0.3s;
    }

        .contact-btn:hover {
            background-color: #0056b3;
            color: var(--white);
        }

    .modal-fullscreen {
        width: 100vw;
        height: 100vh;
        margin: 0;
        padding: 0;
        max-width: none;
    }

        .modal-fullscreen .modal-content {
            height: 100%;
            border: 0;
            border-radius: 0;
        }

        .modal-fullscreen .modal-body {
            overflow: auto;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: rgba(0, 0, 0, 0.9);
        }

        .modal-fullscreen #modalImage {
            max-height: 90vh;
            max-width: 90vw;
            object-fit: contain;
        }

    .modal-close {
        position: absolute;
        top: 15px;
        right: 15px;
        color: white;
        font-size: 30px;
        cursor: pointer;
    }

    .info-card p {
        margin-bottom: 10px;
    }

    .info-card ul, .info-card ol {
        padding-left: 20px;
        margin-bottom: 10px;
    }

    .info-card li {
        margin-bottom: 5px;
    }

    .modal-nav {
        position: absolute;
        top: 50%;
        width: 100%;
        display: flex;
        justify-content: space-between;
    }

        .modal-nav .btn {
            background-color: rgba(0, 0, 0, 0.5);
            color: white;
            font-size: 24px;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
        }

            .modal-nav .btn:hover {
                background-color: rgba(0, 0, 0, 0.8);
            }
</style>

<div class="room-header">
    <div class="container">
        <div class="room-title-container">
            <h1 class="room-title">@Model.NameRoom</h1>

            @if (!string.IsNullOrEmpty(Model.LabelRoom))
            {
                <span class="badge bg-warning text-dark badge-custom">@Model.LabelRoom</span>
            }

        </div>
        <p class="lead">@Model.TitleRoom</p>
        <span class="badge bg-info text-white badge-custom">@Model.TypeRoom</span>
        <span class="badge bg-success badge-custom">@Model.StatusRoom</span>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-lg-8">
            <div class="info-card">
                <div class="main-image-container">
                    <img src="@Model.MainImageRoom" alt="@Model.NameRoom" class="main-image" id="mainImage" />
                </div>
                <div class="gallery-container">
                    <img src="@Model.MainImageRoom" alt="@Model.NameRoom" class="gallery-image active" onclick="changeMainImage(this.src)" />

                    @foreach (var image in Model.RoomImages.Where(img => img.ImageUrl != Model.MainImageRoom))
                    {
                        <img src="@image.ImageUrl" alt="Room Image" class="gallery-image" onclick="changeMainImage(this.src)" />
                    }

                </div>
            </div>

            <div class="info-card">
                <h2 class="mb-3">Mô tả</h2>
                <div id="descriptionContent"></div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="info-card">
                <h3 class="room-price mb-4">@Model.PriceRoom?.ToString("N0") VNĐ/tháng</h3>
                <div class="room-feature">
                    <i class="fas fa-map-marker-alt feature-icon"></i> @Model.AddressRoom
                </div>
                <div class="room-feature">
                    <i class="fas fa-users feature-icon"></i> Sức chứa: @Model.CapacityRoom người
                </div>

                @if (Model.District != null)
                {
                    <div class="room-feature">
                        <i class="fas fa-city feature-icon"></i> Quận/Huyện: @Model.District.DistrictName
                    </div>
                }

            </div>

            <div class="info-card">
                <h4 class="mb-3">Liên hệ ngay</h4>

                @if (!string.IsNullOrEmpty(Model.Collaborator.PhoneNumberCollaborator))
                {
                    <a href="tel:@Model.Collaborator.PhoneNumberCollaborator" class="contact-btn">
                        <i class="fas fa-phone"></i> Gọi ngay: @Model.Collaborator.PhoneNumberCollaborator
                    </a>
                }


                @if (!string.IsNullOrEmpty(Model.Collaborator.FacebookCollaborator))
                {
                    <a href="@Model.Collaborator.FacebookCollaborator" target="_blank" class="contact-btn">
                        <i class="fab fa-facebook"></i> Liên hệ Facebook
                    </a>
                }


                @if (!string.IsNullOrEmpty(Model.Collaborator.MessengerCollaborator))
                {
                    <a href="@Model.Collaborator.MessengerCollaborator" target="_blank" class="contact-btn">
                        <i class="fab fa-facebook-messenger"></i> Nhắn tin Messenger
                    </a>
                }


                @if (!string.IsNullOrEmpty(Model.Collaborator.ZaloCollaborator))
                {
                    <a href="@Model.Collaborator.ZaloCollaborator" target="_blank" class="contact-btn">
                        <div class="contact-icon" style="display: inline-block; vertical-align: middle; margin-right: 5px;">
                            <img src="/images/zalo-icon.png" alt="Zalo" width="20" height="20" style="vertical-align: middle;">
                        </div>
                        Liên hệ qua Zalo
                    </a>
                }


                @if (!string.IsNullOrEmpty(Model.Collaborator.TiktokCollaborator))
                {
                    <a href="@Model.Collaborator.TiktokCollaborator" target="_blank" class="contact-btn">
                        <i class="fas fa-users"></i> Tham gia hội nhóm
                    </a>
                }

            </div>


            @if (!string.IsNullOrEmpty(Model.NoteRoom))
            {
                <div class="info-card" id="noteCard">
                    <h4 class="mb-3">Ghi chú</h4>
                    <p>@Model.NoteRoom</p>
                </div>
            }

        </div>
    </div>
</div>

<div class="modal fade" id="imageModal" tabindex="-1" role="dialog" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-body">
                <span class="modal-close" onclick="closeModal()">&times;</span>
                <img src="" class="img-fluid" id="modalImage">
                <div class="modal-nav">
                    <button class="btn btn-prev" onclick="changeModalImage(-1)">&lt;</button>
                    <button class="btn btn-next" onclick="changeModalImage(1)">&gt;</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/dompurify/2.3.3/purify.min.js"></script>
    <script>
        var currentImageIndex = 0;
        var images = [];

        function changeMainImage(imgSrc) {
            $('#mainImage').attr('src', imgSrc);
            $('.gallery-image').removeClass('active');
            $('.gallery-image[src="' + imgSrc + '"]').addClass('active');
        }

        function openModal(imgSrc) {
            currentImageIndex = images.indexOf(imgSrc);
            $('#modalImage').attr('src', imgSrc);
            $('#imageModal').modal('show');
        }

        function closeModal() {
            $('#imageModal').modal('hide');
        }

        function changeModalImage(direction) {
            currentImageIndex += direction;
            if (currentImageIndex < 0) {
                currentImageIndex = images.length - 1;
            } else if (currentImageIndex >= images.length) {
                currentImageIndex = 0;
            }
            $('#modalImage').attr('src', images[currentImageIndex]);
        }

        $(document).ready(function () {
            $('.gallery-container').on('wheel', function (event) {
                event.preventDefault();
                this.scrollLeft += event.originalEvent.deltaY;
            });

            images = $('.gallery-image').map(function () {
                return $(this).attr('src');
            }).get();

            $('#mainImage').click(function () {
                var imgSrc = $(this).attr('src');
                openModal(imgSrc);
            });

            $('.gallery-image').click(function () {
                var imgSrc = $(this).attr('src');
                changeMainImage(imgSrc);
            });

            $('.gallery-image').dblclick(function () {
                var imgSrc = $(this).attr('src');
                openModal(imgSrc);
            });

            $(document).keydown(function (e) {
                if ($('#imageModal').hasClass('show')) {
                    if (e.key === "ArrowLeft") {
                        changeModalImage(-1);
                    } else if (e.key === "ArrowRight") {
                        changeModalImage(1);
                    } else if (e.key === "Escape") {
                        closeModal();
                    }
                }
            });

            $('.modal-close').click(function () {
                closeModal();
            });

            function equalizeHeight() {
                var descHeight = $('.col-lg-8 .info-card:last-child').outerHeight();
                $('#noteCard').css('min-height', descHeight + 'px');
            }

            equalizeHeight();
            $(window).resize(equalizeHeight);

            var descriptionHtml = @Html.Raw(Json.Serialize(Model.DescriptionRoom));
            descriptionHtml = descriptionHtml.replace(/^"|"$/g, '');
            var cleanHtml = DOMPurify.sanitize(descriptionHtml);
            document.getElementById('descriptionContent').innerHTML = cleanHtml;
        });
    </script>
}